***Should add all notes before page 86 above here***

Ch 4 Responsive layouts with Flexbox (starting at page 86)

Absolute vs Relative Positioning

Absolute positioning
- Place an element in an exact spot inside another element
- 3 Requirements:
  - 1. property positions: absolute
  - 2. coordinates: distance of edge of element to edge of its container
  - 3. ancestor element that has declared position property of either
       absolute or relative

Ch 5 Adaptive Layouts with Media Queries

- Call it adaptive layout b/c sometimes people get confused about the term responsive
- Recommended way is to write styles for smallest screen and then provide override styles
in media queries that are triggered when viewport is larger than set threshold
- Mobile browsers can have multiple viewports
  - layout/actual viewport
    - 980 pixels (not sure about this part)
  - visual viewport
    - what the user pinch and zoom on a page

Can tell the browser what you want as the default viewport for certain screens
- meta tag to do this
- this is the initial scale stuff you did for sapling mobile homework
- ideal viewport for the specific device that is recommended by browser maker
- Page 95 has a really good table to understand this


Device mode button in chrome dev tools

Media query
- group css declaration blocks
- if screen is X pixels wide, if screen is wider than is tall, if screen has high pixel density
- @media followed by conditions then { }
- media types
  - made to differentiate between devices (smart tv vs handheld)
  - browsers don't do a good job with this so almost always specify all


Phillip Walton's Flexbox resources
- Solved by Flexbox: philipwalton.github.io/solved-by-flexbox
- Flexbugs: github.com/philipwalton/flexbugs


CH 6 Handling Events with Javascript

Javascript adds functionality to websites by manipulating DOM elements and CSS styles on a page

ECMAScript Editions
- 3: December 1999
    - encompasses most of the language features you use
- 5: December 2009
    - backwards compatible
    - Opt in enhancements that prevent the usage of more error prone parts
- 6: June 2015
    - new syntax and language features
    - Can be translated into ES5
    - Not all browsers support it yet

Data attributes
- use them to refer to elements on page with Javascript
- need to start with data-
- better to use data- attributes with javascript and class elements with css to
keep things separated
- Use them to make queries about content of a web page
